sudo: false

language: python

matrix:
  fast_finish: true
  include:
    # - python: 3.7
    #   dist: xenial
    #   sudo: true
    #   env:
    #     - JOB: 'UNITTEST'
    #     - FULL_DEPS: true
    - python: 3.6
      env:
        - JOB: 'UNITTEST'
        - FULL_DEPS: true
    - python: 3.6
      env:
        - JOB: 'DOCS'
        - FULL_DEPS: true
      addons:
        apt:
          packages:
          - pandoc
    - python: 3.6
      env:
        - JOB: 'LINT'
        - FULL_DEPS: false

cache: pip


notifications:
  email: false

# miniconda recipe
# http://conda.pydata.org/docs/travis.html#using-conda-with-travis-ci
before_install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
   # Useful for debugging any issues with conda
  - conda info -a

# Install packages
install:
  # Install dependencies
  - conda create -q -n plotnine-test python=$TRAVIS_PYTHON_VERSION
  - source activate plotnine-test
  - |
    if [[ "$FULL_DEPS" ]]; then
      conda install scipy pandas statsmodels scikit-learn
      export MPLLOCALFREETYPE=1
      pip install matplotlib --no-binary matplotlib
      pip install scikit-misc
      pip install geopandas
      pip install adjustText
      pip install -e .
    fi
  - |
    if [[ "$JOB" == "UNITTEST" ]]; then
      conda install pytest-cov
      conda install -c conda-forge "pyshp>=2.0.0" # temporary
      pip install coveralls
    elif [[ "$JOB" == "DOCS" ]]; then
      pip install -r requirements/doc.txt
    elif [[ "$JOB" == "LINT" ]]; then
      pip install flake8
    fi
  # List all conda and pip packages
  - conda list
  - pip list
  - export MATPLOTLIB_BACKEND=agg

script:
  - |
    if [[ "$JOB" == "UNITTEST" ]]; then
      coverage erase
      make test
    elif [[ "$JOB" == "DOCS" ]]; then
      pushd doc
      # low pandoc version leads to a warning so
      # SPHINXOPTS=-W fails
      make html && popd
    elif [[ "$JOB" == "LINT" ]]; then
      make lint
    fi


# Calculate coverage
after_success:
  - |
    if [[ "$JOB" == "UNITTEST" ]]; then
      coveralls --rcfile=.coveragerc
    fi

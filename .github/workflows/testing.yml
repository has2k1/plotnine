name: build

on: [push, pull_request]

jobs:
  # Unittests
  unittests:
    runs-on: ubuntu-latest

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      matrix:
        python-version: ["3.7", "3.10"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Packages
        shell: bash -l {0}
        run: |
          pip install -r requirements/testing.txt
          pip install -e .

      - name: Environment Information
        shell: bash -l {0}
        run: |
          pip list

      - name: Run Tests
        shell: bash -l {0}
        run: |
          coverage erase
          make test

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: result-images
          path: result_images/
          if-no-files-found: ignore

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          name: "py${{ matrix.python-version }}"

  # Linting
  lint:
    runs-on: ubuntu-latest

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Ref: https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#caching-dependencies
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Packages
        shell: bash -l {0}
        run: pip install flake8

      - name: Environment Information
        shell: bash -l {0}
        run: pip list

      - name: Run Tests
        shell: bash -l {0}
        run: make lint

  # Documentation
  documentation:
    runs-on: ubuntu-latest

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Ref: https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#caching-dependencies
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Packages
        shell: bash -l {0}
        run: |
          sudo apt-get install pandoc
          pip install -r requirements/testing.txt
          pip install -r requirements/doc.txt
          pip install -e .
          python setup.py install

      - name: Environment Information
        shell: bash -l {0}
        run: pip list

      - name: Build Documentation
        shell: bash -l {0}
        run: |
          pushd doc
          # low pandoc version leads to a warning so
          # SPHINXOPTS=-W fails
          make html && popd
